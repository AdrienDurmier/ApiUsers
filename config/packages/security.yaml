security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_SUPER_ADMIN:   ROLE_ADMIN
        # Plateforme Iptis
        ROLE_IPTIS_COMMERCIAL:              ROLE_USER
        ROLE_IPTIS_CHEF:                    [ROLE_USER]
        ROLE_IPTIS_DEVISEUR_ACCORD_PRIX:    ROLE_IPTIS_COMMERCIAL
        ROLE_IPTIS_ADMIN:                   [ROLE_IPTIS_CHEF, ROLE_IPTIS_DEVISEUR_ACCORD_PRIX]
        # Plateforme Fiche de frais
        ROLE_FRAIS_ADMIN:       [ROLE_FRAIS_EMPLOYE]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        from_database:
            entity:
                class: App\Entity\User
                property: username

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern:  ^/api/auth/login
            stateless: true
            anonymous: true
            json_login:
                provider: from_database
                check_path:               /api/auth/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
            provider: from_database

        api_register:
            pattern:  ^/api/auth/register
            stateless: true
            anonymous: true

        api_doc:
            pattern:  ^/api/doc
            stateless: true
            anonymous: true

        api_refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        api:
            pattern: ^/api
            stateless: true
            anonymous: false
            provider: from_database
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            pattern: ^/
            anonymous:    true
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                provider: from_database
                csrf_token_generator: security.csrf.token_manager
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                always_use_default_target_path: false
                default_target_path: admin_admin_index

            logout:
                path: /logout
                target: /
                handlers: 
                    - App\Listener\LogoutListener
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator